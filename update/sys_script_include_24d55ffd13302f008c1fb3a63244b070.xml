<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_shirehall_tr.ClientDateTimeUtils</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>ClientDateTimeUtils</name>
        <script><![CDATA[var ClientDateTimeUtils = Class.create();
ClientDateTimeUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
			
			//Returns the Date/Time of right now.
			getNowDateTime: function(){
				var gdt = new GlideDateTime(); //Now Date/Time
				var now = gdt.getDisplayValue();
				return now;
			},
			
			//Returns the Date right now.
			getNowDate: function(){
				var gdt = GlideDate(); //Now Date
				var now = gdt.getDisplayValue();
				return now;
			},
			
			//Returns the Time of right now.
			getNowTime: function(){
				var now = GlideTime();; //Now Time
				var modnow = now.getLocalTime().toString().split(' ');
				return modnow[1];
			},
			
			//Takes a date/time field and adds time to it.
			//params = sysparm_fdt (the first date/time field), sysparm_addtype (type of time to add - second, minute, hour, day, week, month, year), sysparm_addtime (amount of time to add based on the type).
			addDateTimeAmount: function(){
				var firstDT = this.getParameter('sysparm_fdt'); //First Date-Time Field
				var addTYPE = this.getParameter('sysparm_addtype'); //What to add - second (addSeconds()), minute (need to add conversion), hour (need to add conversion), day (addDays()), week (addWeeks()), month (addMonths()), year (addYears())
				var addTIME = this.getParameter('sysparm_addtime'); //How much time to add
				var day = GlideDateTime(firstDT);
				
				if(addTYPE == 'second'){day.addSeconds(addTIME);}
					else if (addTYPE == 'minute'){day.addSeconds(addTIME*60);}
						else if (addTYPE == 'hour'){day.addSeconds(addTIME*(60*60));}
							else if (addTYPE == 'day'){day.addDays(addTIME);}
								else if (addTYPE == 'week'){day.addWeeks(addTIME);}
									else if (addTYPE == 'month'){day.addMonths(addTIME);}
										else if (addTYPE == 'year'){day.addYears(addTIME);}
											else {day.addDays(addTIME);}
												
												//return "First Date: " + firstDT + " -Time to Add: " + addTIME + " -Add Type: " + addTYPE + " -Added Time: " + day;
												return day;
											},
											
											//Takes a glide date field and adds time to it.
											//params = sysparm_fdt (the first date/time field), sysparm_addtype (type of time to add - day, week, month, year),sysparm_addtime (amount of time to add based on the type).
											addDateAmount: function(){
												var firstDT = this.getParameter('sysparm_fdt'); //First Date Field
												var addTYPE = this.getParameter('sysparm_addtype'); //What to add - day (addDays()), week (addWeeks()), month (addMonths()), year (addYears())
												var addTIME = this.getParameter('sysparm_addtime'); //How much time to add
												var day = GlideDate();
												day.setValue(firstDT);
												
												if(addTYPE == 'day'){day.addDays(addTIME);}
													else if (addTYPE == 'week'){day.addWeeks(addTIME);}
														else if (addTYPE == 'month'){day.addMonths(addTIME);}
															else if (addTYPE == 'year'){day.addYears(addTIME);}
																else {day.addDays(addTIME);}
																	
																	//return "First Date: " + firstDT + " -Time to Add: " + addTIME + " -Add Type: " + addTYPE + " -Added Time: " + day;
																	return day;
																},
																
																addTimeAmount: function(){
																	var firstDT = this.getParameter('sysparm_fdt'); //First Date-Time Field
																	var addTYPE = this.getParameter('sysparm_addtype'); //What
																	var addTIME = this.getParameter('sysparm_addtime'); //How much time to add
																	var time = GlideTime();
																	time.setValue(firstDT);
																	
																	if(addTYPE == 'second'){time.addSeconds(addTIME);}
																		else if (addTYPE == 'minute'){time.addSeconds(addTIME*60);}
																			else if (addTYPE == 'hour'){time.addSeconds(addTIME*(60*60));}
																				else {time.addSeconds(addTIME);}
																					
																					var modtime = time.toString().split(' ');
																					//return "First Date: " + firstDT + " -Time to Add: " + addTIME + " -Add Type: " + addTYPE + " -Added Time: " + time;
																					return modtime[1];
																				},
																				
																				//Private function to calculate the date difference return result in second, minute, hour, day.
																				_calcDateDiff: function(diffTYPE, seconds){
																					var thisdiff;
																					if (diffTYPE == "day"){thisdiff = seconds/86400;}
																						else if (diffTYPE == "hour"){thisdiff = seconds/3600;}
																							else if (diffTYPE == "minute"){thisdiff = seconds/60;}
																								else if (diffTYPE == "second"){thisdiff = seconds;}
																									else {thisdiff = seconds;}
																										return thisdiff;
																									}
																									
																									
																								});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-09-28 03:27:21</sys_created_on>
        <sys_id>24d55ffd13302f008c1fb3a63244b070</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>ClientDateTimeUtils</sys_name>
        <sys_package display_value="Shirehall Traffic Tracker" source="x_snc_shirehall_tr">2f702aec4f382b0062be77618110c776</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Shirehall Traffic Tracker">2f702aec4f382b0062be77618110c776</sys_scope>
        <sys_update_name>sys_script_include_24d55ffd13302f008c1fb3a63244b070</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-09-28 03:38:15</sys_updated_on>
    </sys_script_include>
</record_update>
